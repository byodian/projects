{"version":3,"sources":["componets/Note.js","services/note.js","componets/Notification.js","componets/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","headers","withCredentials","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","catch","notesToShow","filter","map","find","n","changeNote","returnedNote","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","alert","noteObject","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAeeA,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBACA,iBAEJ,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQD,UAAU,aAAaE,QAASL,EAAxC,SAA2DC,Q,gBCT3DK,EAAU,aAuBD,EArBA,WAQb,OAPgBC,IAAMC,IAAIF,EAAS,CACjCG,QAAS,CACP,UAAW,aAEbC,iBAAiB,IAGJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBP,IAAMQ,KAAKT,EAASQ,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBP,IAAMU,IAAN,UAAaX,EAAb,YAAwBU,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCT5BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKhB,UAAU,QAAf,SACGgB,KCQQC,EAfA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2GC4FSC,G,MA/FH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,iBAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,MAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMrBC,qBAAU,WACRC,IAEG1B,MAAK,SAAA2B,GACJT,EAASS,MAEVC,OAAM,WACLJ,EAAgB,iCAEnB,IAEH,IAAMK,EAAcR,EAChBJ,EACAA,EAAMa,QAAO,SAAA1C,GAAI,OAAuB,IAAnBA,EAAKG,aA8C/B,OACC,gCACI,uCACA,cAAC,EAAD,CAAciB,QAASe,IACvB,8BACE,yBAAQ7B,QAAS,kBAAM4B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGQ,EAAYE,KAAI,SAAA3C,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAlCD,SAAAgB,GACzB,IAAMjB,EAAO6B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAChC6B,EAAU,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAE/CmC,EACUrB,EAAI6B,GACXlC,MAAK,SAAAmC,GACJjB,EAASD,EAAMc,KAAI,SAAA3C,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAO+C,SAEpDP,OAAM,WACLJ,EAAgB,SAAD,OACJpC,EAAKK,QADD,sCAGf2C,YAAW,WACTZ,EAAgB,QACf,KACHN,EAASD,EAAMa,QAAO,SAAAG,GAAC,OAAIA,EAAE5B,KAAOA,SAkBRgC,CAAmBjD,EAAKiB,MAF3CjB,EAAKiB,SAMhB,uBAAMiC,SA9DO,SAACC,GAEhB,GADAA,EAAMC,iBACU,KAAZrB,EAEF,OADAsB,MAAM,qBACC,KAGT,IAAMC,EAAY,CAChBjD,QAAS0B,EACT5B,UAAWoD,KAAKC,SAAW,IAG7BlB,EACUgB,GACP1C,MAAK,SAAAmC,GACJjB,EAASD,EAAM4B,OAAOV,IACtBf,EAAW,QA8Cb,UACE,uBACE0B,MAAO3B,EACP4B,SA7CiB,SAACR,GACxBnB,EAAWmB,EAAMS,OAAOF,UA8CpB,wBAAQG,KAAK,SAAb,oBAEF,cAAC,EAAD,SC7FNC,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f296c2d6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important'\n    : 'make important';\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button className=\"btn-toggle\" onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n}\n\nexport default Note;","import axios from 'axios';\nconst baseUrl = '/api/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl, {\n    headers: {\n      'API-KEY': '123456788'\n    },\n    withCredentials: true\n  });\n\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update };\n","const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","const Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br/>\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nexport default Footer;","import { useEffect, useState } from 'react';\nimport Note from './componets/Note';\nimport noteService from './services/note';\nimport Notification from './componets/Notification';\nimport Footer from './componets/Footer';\nimport './index.css';\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes);\n      })\n      .catch(() => {\n        setErrorMessage('The service doesn\\'t work')\n      })\n  }, []);\n\n  const notesToShow = showAll \n    ? notes\n    : notes.filter(note => note.important === true);\n\n  const addNotes = (event) => {\n    event.preventDefault();\n    if (newNote === '') {\n      alert('Please add a note');\n      return null;\n    }\n\n    const noteObject= {\n      content: newNote,\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n        setNewNote('');\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changeNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changeNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n      })\n      .catch(() => {\n        setErrorMessage(\n          `Note \"${note.content}\" was already deleted from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter(n => n.id !== id));\n      })\n  }\n  \n\treturn (\n\t\t<div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n            key={note.id} \n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNotes}>\n        <input \n          value={newNote} \n          onChange={handleNoteChange} \n        />\n        <button type=\"submit\">Add</button>\n      </form>\n      <Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}