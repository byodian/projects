{"version":3,"sources":["componets/Filter.js","componets/PersonForm.js","componets/Persons.js","services/persons.js","componets/Notification.js","App.js","index.js"],"names":["Filter","filter","handleChange","value","onChange","PersonForm","props","o","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","handleClick","map","person","name","number","onClick","id","baseUrl","getAll","axios","get","then","response","data","newPerson","post","updatePerson","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","warnMessage","setWarnMessage","warnClassName","setWarnClassName","useEffect","personsServices","initialPersons","warnMessageFn","timer","setTimeout","personsToShow","toLowerCase","includes","toLocaleLowerCase","fn","event","target","formProps","preventDefault","alert","find","console","log","undefined","returnedPerson","concat","catch","error","window","confirm","changedPerson","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be17ef00.chunk.js","sourcesContent":["const Filter = ({ filter, handleChange }) => ( \n  <div>\n    filter shown with <input value={filter} onChange={handleChange}/>\n  </div>\n)\n\nexport default Filter;","const PersonForm = (props) => {\n  const { addPerson, newName, newNumber, handleNameChange, handleNumberChange } = props.o;\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n}\n\nexport default PersonForm;\n\n","const Persons = ({ persons, handleClick }) => (\n  <div>\n    {persons.map(person => (\n      <p key={person.id}>\n        {person.name} {person.number}\n        <button onClick={() => handleClick(person.name, person.id)}>delete</button>\n      </p>)\n    )}\n  </div>\n);\n\nexport default Persons;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\nconst create = newPerson => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then(response => response.data);\n}\n\nconst update = (id, updatePerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, updatePerson);\n  return request.then(response => response.data);\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(() => getAll());\n}\n\nexport default { getAll, create, update, remove };","const Notification = ({ message, className }) => {\n  if (message === null) {\n    return null;\n  }\n\n  const name = `warning ${className}`;\n\n  return (\n    <div className={name}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useEffect, useState } from 'react';\nimport Filter from './componets/Filter';\nimport PersonForm from './componets/PersonForm';\nimport Persons from './componets/Persons';\nimport personsServices from './services/persons'\nimport Notification from \"./componets/Notification\";\nimport './index.css';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filter, setFilter ] = useState('');\n  const [ warnMessage, setWarnMessage ] = useState(null);\n  const [ warnClassName, setWarnClassName ] = useState('');\n\n  useEffect(() => {\n    personsServices\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons);\n      })\n  }, []);\n\n  const warnMessageFn = (message, name, timer = 5000) => {\n    setWarnMessage(message)\n    setWarnClassName(name);\n\n    setTimeout(() => {\n      setWarnMessage(null);\n    }, timer);\n  }\n\n  const updatePerson = (person) => {\n    const message = `${person.name} is already added to phonebook, replac the old number with a new one?`;\n    if (person && window.confirm(message)) {\n      const id = person.id;\n      const changedPerson = { ...person, number: newNumber };\n\n      personsServices\n        .update(id, changedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(p => p.id !== id ? p : returnedPerson));\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch(() => {\n          const message = `Infomation of ${person.name} has already been removed from server`;\n          warnMessageFn(message, 'fail');\n          setPersons(persons.filter(p => p.id !== id));\n        })\n    }\n  }\n\n  // Check inputs fields\n  const isEmpty = () => {\n    if (newName === '' || newNumber === '') {\n      alert(\"Name or Number input field can't be empty.\");\n      return;\n    };\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    isEmpty();\n    const person = persons.find(person => person.name === newName);\n    console.log(person);\n    \n    // If person doesn't exist, then POST it into server.\n    if (person === undefined) {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n\n      personsServices\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName('');\n          setNewNumber('');\n          warnMessageFn(`Added ${returnedPerson.name}`, 'pass');\n        })\n        .catch(error => {\n          console.log(error.message);\n        })\n    } else {\n      // If person exists, then put it into service\n      updatePerson(person);\n    }\n  }\n\n  // Filter persons with name message\n  const personsToShow = persons.filter(person => \n    person.name\n      .toLowerCase()\n      .includes(filter.toLocaleLowerCase())\n  ); \n\n  const handleChange = (fn) => (event) => {\n    fn(event.target.value);\n  }\n\n  const handleDeleteClick = (name, id) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personsServices\n        .remove(id)\n        .then(returnedPerson => {\n          setPersons(returnedPerson);\n          warnMessageFn('Deleted successfully', 'pass');\n        })\n        .catch(() => {\n          const message = `Information of ${name} has already been removed from server`;\n          warnMessageFn(message, 'fail');\n          setPersons(persons.filter(p => p.id !== id));\n        })\n    }\n  }\n\n  const formProps = {\n    handleNameChange: handleChange(setNewName),\n    handleNumberChange: handleChange(setNewNumber),\n    addPerson,\n    setFilter,\n    newName,\n    newNumber\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={warnMessage} className={warnClassName} />\n      <Filter \n        filter={filter} \n        handleChange={handleChange(setFilter)}\n      />\n      <h2>Add a new person</h2>\n      <PersonForm o={formProps} />\n      <h2>Numbers</h2>\n      <Persons \n        persons={personsToShow}\n        handleClick={handleDeleteClick}\n      />\n    </div>\n  );\n}\n\nexport default App;","import React, { useState }from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}